{
    "openapi": "3.0.0",
    "info": {
        "title": "Mentoring Documentation",
        "description": "This is an API Rest",
        "version": "1.0.0",
        "contact": {
            "email": "carbono.marcelo@gmail.com"
        }
    },
    "paths": {
        "/users": {
            "post": {
                "tags": ["Users"],
                "summary": "Create a user",
                "description": "Create a new user. If you are a mentor, set variable is_mentor to true, fullfil the info_mentor with some information and send communications_id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Created"
                    },
                    "400": {
                        "description": "User already exists!"
                    }
                    
                }
            }
        },

        "/users/profile": {
            "get": {
                "tags": ["Users"],
                "summary": "Show user Profile",
                "description": "Show user profile according to his role",
                "security": [
                    { "bearerAuth": [] }
                ],
                "responses": {
                    "200": {
                        "description": "User info returned in json"
                    },

                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/users/avatar": {
            "patch": {
                "tags": ["Users"],
                "summary": "Update user's avatar",
                "description": "Update user's avatar",
                "security": [
                    { "bearerAuth": []}
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type":"object",
                                "properties": {
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Updated sucesssfully"
                    },
                    "400": {
                        "description": "User not found"
                    }
                }
            }
        },

        "/users/skills": {
            "get": {
                "tags": ["Users"],
                "summary": "Find user's skills registered",
                "description": "User selects one or more skills then he may find mentor's according to his skills",
                "security": [
                    { "bearerAuth": [] }
                ],
                "responses": {
                    "200": {
                        "description": "User's skills in json"
                    }
                }
            }
        },

        "/users/find_mentors?skills_id=": {
            "get": {
                "tags": ["Users"],
                "summary": "Find mentor's",
                "description": "Filters the mentor's according to the user skill's",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "skills_id",
                        "in": "query",
                        "description": "skills_id to filter mentor's",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mentor's list"
                    },
                    "400": {
                        "description": "One or more skills was not found!"
                    }
                }
            }
        },

        "/users/{mentor_id}/request_mentoring": {
            "get": {
                "tags": ["Users"],
                "summary": "Request mentoring",
                "description": "See informations from the mentors so the user may request the mentoring",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentor_id",
                        "in": "path",
                        "description": "mentor id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description": "Mentor informations"
                    }
                }
            }
        },

        "/users/mentors/availabilities": {
            "post": {
                "tags": ["Users"],
                "summary": "Create mentor's availabilities",
                "description": "Create the mentor's time and date to do a mentoring session",
                "security": [
                    { "bearerAuth": [] }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/mentors_availabilities"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Availabilities created"
                    },
                    "400": {
                        "description": "Availabilities erros"
                    }
                }
            }
        },

        "/password/forgot": {
            "post": {
                "tags": ["Users"],
                "summary": "Send email to user",
                "description": "Send email to user with a link so that he can change his password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "email with an token"
                    },
                    "400": {
                        "description": "User not found"
                    }
                }
            }
        },

        "/password/reset?token=": {
            "post": {
                "tags": ["Users"],
                "summary": "Reset user password",
                "description": "Reset the password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token from the email to reset password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                    
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "password changed"
                    },
                    "404": {
                        "description": "Token not found"
                    },
                    "400": {
                        "description": "token expired"
                    }
                }
            }
        },

        "/mentoring/{mentor_id}": {
            "post": {
                "tags": ["Mentoring"],
                "summary": "Create a mentoring",
                "description": "Create a mentoring",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentor_id",
                        "in": "path",
                        "description": "mentor_id that the user requested to mentoring",
                        "required" : true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/mentoring"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mentoring created"
                    },
                    "400": {
                        "description": "Mentor does not exists"
                    }
                }

            }
        },

        "/mentoring/{mentoring_id}/accept/{user_id}": {
            "get": {
                "tags": ["Mentoring"],
                "summary": "Loads a requested mentoring page",
                "description": "Loads the requested mentoring to the mentor containing all the information he needs to accept or refuse it",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentoring_id",
                        "in": "path",
                        "description": "mentoring id",
                        "requried": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "user id that requested the mentoring",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the mentoring page"
                    },
                    "400": {
                        "description": "mentoring expired or already accepted"
                    },
                    "404": {
                        "description": "mentoring not found"
                    }
                }
            }
        },

        "/mentoring/{mentoring_id}/accept": {
            "patch": {
                "tags": ["Mentoring"],
                "summary": "Accept the mentoring",
                "description": "The mentor evaluate the user request to the mentoring and accept it",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentoring_id",
                        "in": "path",
                        "description": "The mentoring id to accept it",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                
                "responses": {
                    "204": {
                        "description": "Mentoring accepted!"
                    }
                }
            }
        },

        "/mentoring/{mentoring_id}/refused": {
            "delete": {
                "tags": ["Mentoring"],
                "summary": "Refuse the mentoring",
                "description": "The mentor or the user refuses the request to the mentoring and an email is send",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentoring_id",
                        "in": "path",
                        "description": "The mentoring id to refuse it",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],

                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "properties": {
                                    "refused_info": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                
                "responses": {
                    "204": {
                        "description": "Mentoring refused"
                    },
                    "400": {
                        "description": "Mentoring was already done or already cancelled"
                        
                    },
                    "404": {
                        "description": "Mentoring not found"
                    }
                }
            }
        },

        "/mentoring/list": {
            "get": {
                "tags": ["Mentoring"],
                "summary": "List mentoring",
                "description": "Lists a table of some informations about the mentoring the user has. The data will show according to his role.",
                "security": [
                    { "bearerAuth": []}
                ],
                "responses": {
                    "200": {
                        "description": "List the informations"
                    }
                }
            }
        },

        "/mentoring/{mentoring_id}/complete/{mentor_id}": {
            "patch": {
                "tags": ["Mentoring"],
                "summary": "Complete the mentoring",
                "description": "The user complete the mentoring and close it",
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "mentoring_id",
                        "in": "path",
                        "description": "The mentoring id to complete it",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mentor_id",
                        "in": "path",
                        "description": "mentor id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],

                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "stars": {
                                        "type": "string"
                                    },
                                    "comment": {
                                        "type": "string"
                                    }
                                }

                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Mentoring completed!"
                    },
                    "400": {
                        "description": "You cannot finish a non-accepted mentoring || Mentoring is already finished"
                    },
                    "404": {
                        "description": "Mentoring not found"
                    }
                }
            }
        },

        "/session": {
            "post": {
                "tags": ["Authenticate"],
                "summary": "Authentication user",
                "description": "Verify user's email and password, create a new session and a session token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type: ": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session created"
                    },
                    "401": {
                        "description": "Email or password incorrect"
                    }
                }
            }
        },
        "/refresh_token": {
            "post": {
                "tags": ["Authenticate"],
                "summary": "Create a refresh_token",
                "description": "Create a refresh_token and a session token in case the user's session token expired",
                "security": [
                    { "bearerAuth": [] }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token generated and return both tokens(session and refresh)"
                    },
                    "400": {
                        "description": "Refresh Token does not exists!"
                    }
                }
            }
        },

        "/logout": {
            "delete": {
                "tags": ["Authenticate"],
                "summary": "User's logout",
                "description": "User's system logout and refresh token destroyed",
                "security": [
                    { "bearerAuth": [] }
                ],
                "responses": {
                    "200": {
                        "description": "Success logout"
                    },

                    "400": {
                        "description": "User does not have a refresh token"
                    }
                }
            }
        }
    },

    "definitions": {
        "User": {
            "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }, 
                    "password": {
                        "type": "string"
                    },
                    "is_mentor": {
                        "type": "boolean"
                    },
                    "info_mentor": {
                        "type": "string"
                    },
                    "skills_id": {
                        "type": "array"
                    },
                    "communications_id": {
                        "type": "array"
                    }
                },
                "example": {
                    "first_name": "first name sample",
                    "last_name": "last name sample",
                    "email": "sample@gmail.com",
                    "password": "12345",
                    "is_mentor": false,
                    "info_mentor": "if you are a mentor, say something about you.",
                    "skills_id": ["1", "2", "3"],
                    "communications_id": ["21332ds", "dsad2", "ewe123ds"]
                }
        },

        "mentoring":{
            "type": "object",
            "properties": {
                "mentor_availability_id": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "communication": {
                    "type": "string"
                }
            },
            "example": {
                "mentor_availability_id": "availability id from the mentor in uuid",
                "subject": "message from the user to the mentor about the mentoring",
                "communication": "which plataform they will communicate"
            }
        },
        "mentors_availabilities": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "array"
                },
                "end_date": {
                    "type": "array"
                }
            },
            "example": {
                "start_date": ["TimestampDate"],
                "end_date": ["TimestampDate"]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}